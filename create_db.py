'''
    Запускаем один раз файл перед запуском бота.
    Предварительно готовим файлики с расписанием в excel в файлах lesson1.xlsx, ...
    Формат и название столбцов - важен.
    Если бд накрылось -> удаляем файл timetable (так называется бд)
    Состоит из табоиц:
     - users_st, где хранятся данные о пользователях
        ДАННЫЕ:
            -> logica = благодаря этой перменной и ветвлений в main.py бот понимает, на каком этапе цикла
                находится пользователь и что куда сувать  (есть другое решение, если интересно смотри -> регулярные выражения)

                По сути, logica - определяет то место кода, где окажется пользователь при следующем вводе сообщения

            -> les_1,... = с их помощьью определяем занят ли у человека 1 модуль (Вася же не может раздвоиться
                    и одновременно вести первый урок у 5а и 9д)


     - les_1
     - les_2
     - les_3
'''
import sqlite3 as sq
import pandas as pd

# меняй на True, перед тем как поднять бд
need_create_db = False

# в этой переменной хранятся доступные имена и фамилии
shkolnik_1= ('Дмитрий Антонов', 'Егор Войтов', 'Павел Голяков', 'Милена Гричаная', 'Сергей Двизов', 'Кристина Дементьева', 'Виолетта Дубинина', 'Екатерина Казакова', 'Артур Каракин', 'Виктория Кригер', 'Кирилл Несмашный', 'Влада Отопергенова', 'Ксения Пашкина', 'Данил Печегин', 'Сабина Скопенко', 'Михаил Шаповалов', 'Мария Шостак', 'Александр Шулика', 'Алиса Агопшук', 'Вероника Белянская', 'Декландилан Бёрк', 'София Богдан', 'Дмитрий Бугаев', 'Анастасия Булюк', 'Анастасия Енакиева', 'Анастасия Иринина', 'Олег Каденчук', 'Доминика Киреева', 'Алина Колесник', 'Алина Костюкова', 'Дарья Кузнецова', 'Сергей Люсый', 'Дмитрий Малечкин', 'Елизавета Мезенцева', 'Полина Пивнюк', 'Софья Романова', 'Даниил Скипа', 'Алина Служенко', 'Наталья Третьяк', 'Александра Фирюбкина', 'София Чередниченко', 'Анна Алфёрова', 'Дарья Баджакова', 'Татьяна Васильченко', 'Полина Власова', 'Ангелина Данилова', 'Арина Зарубина', 'Александр Зубков', 'Алина Исмаилова', 'Виктория Ковалёва', 'Алина Маликова', 'Валерия Маликова', 'Богдан Мангер', 'Людмила Михайлик', 'Михаил Попов', 'Дарья Пузикова', 'Виктория Равдина', 'Виктория Руденко', 'София Саламатина', 'Ефим Степанов', 'Александра Терещук', 'Екатерина Царева', 'Анастасия Алёшкина', 'Екатерина Беляева', 'Игорь Бугаец', 'София Галецкая', 'Андрей Гутников', 'Илья Дворак', 'Иван Ершов', 'Николай Игнатенко', 'Ольга Кириченко', 'Юлия Корецкая', 'Ангелина Кузьмина', 'Артем Лукша', 'Екатерина Омельченко', 'Дмитрий Ошарин', 'Дарья Рябова', 'Даниил Самотов', 'Артем Титаренко', 'Данил Тихомиров', 'Анастасия Ткачук', 'Таисия Умрихина', 'Никита Хатунцев', 'Егор Чуяшенко', 'Ксения Шестакова', 'Екатерина Штыгайло', 'Валерия Ящук')

module4 = False # меняй на True если будет 4 модуль

data_folder = "data/"

if need_create_db:
    try:
        with sq.connect(data_folder+'timetable') as cursor:

            print('CONNECTION to bd succes')

            cursor.execute('''
            CREATE TABLE IF NOT EXISTS users_st(
            user_id INT PRIMARY KEY     NOT NULL,
                 name           TEXT    NOT NULL,
                 logica         TEXT    DEFAULT "input_name",
                 friend         TEXT    DEFAULT "T_T",
                 chat_id        INT     NOT NULL, 
                 les_1          TEXT    DEFAULT "False",
                 les_2          TEXT   DEFAULT "False",
                 les_3          TEXT   DEFAULT "False",
                 les_4          TEXT    DEFAULT "False");
            ''')
            cursor.commit()

            print('TABLE CREATE user_st succes')

            for i in range(1, 5):
                if i == 4:
                    continue
                cursor.execute(f'''
                CREATE TABLE IF NOT EXISTS les_{i}(
                grade TEXT PRIMARY KEY     NOT NULL,
                     student    TEXT    DEFAULT "0_o",
                     teacher    TEXT,
                     subject    TEXT
                );
                ''')
                cursor.commit()
                print(f'TABLE CREATE les{i} - succes')

                '''подгрузка расписания из excel файлов
                название файлов в формате 'lesson{номер урока}'
                в файлах заголовки ОБЯЗАТЕЛЬНО - grade, student, teacher, subject'''

                data = pd.read_excel(data_folder + f'lesson{i}.xlsx').set_index('grade')
                for grade in data.index:
                    cursor.execute(f"INSERT INTO les_{i} (grade,student,teacher,subject) \
                        VALUES ('{grade}', '{data['student'][grade]}', '{data['teacher'][grade]}', '{data['subject'][grade]}');")
                print(f'DATA TO TABLE les{i} - succes loaded')
    except Exception as e:
        print(str(e))
        cursor.close()



    # for x in cursor.execute("SELECT * FROM les_1 WHERE grade='5А'"):
    #     print([x])



